package array;

/**
 * 자료구조(Data Structure)
 * 데이터를 효율적으로 저장하고 조작하기 위한 방법을 정의한 것<br/>
 * 즉 데이터를 저장하는 방법과 이를 조작하는 방법을 제공
 * 삽입, 삭제, 검색등의 연산이 가능해야 하며
 * 효율적인 메모리 사용과 처리속도를 보장해야함
 * 구현이 쉽고 이해하기 쉬운 인터페이스를 제공
 * 
 * 배열은 데이터를 저장하는 자료구조의 일종
 * 동일한 자료형의 데이터를 연속된 공간에 순차적으로 나열한 것
 * 배열은 메모리상에서 연속된 공간에 데이터를 저장하며 각데이터는
 * 인덱스라는 숫자로 구분
 * 배열은 메모리에 저장될 때 크기가 결정되며 이 크기는 변경할 수 없다
 */
public class UseArrayExample {

	public static void main(String[] args) {
		
		/*
		 	배열 생성 방법
		 	1. 배열에 저장할 값이 있을시
		 */
		// 나열되어 있는 값으로 크기가 결정되므로 크기가 지정할 필요가 없음.
		int [] array = new int[] {10, 20, 30, 40, 50};
		
		// 2. 선언과 동시에 값을 지정할 때는 new 연산자를 생략가능함
		int array2[] = {80,40,70,60};
		
		// 3. 선언 이후에 배열 항목을 초기활 할때는 new 연산자를 생략할 수 있음
		int[] array3;
		// array3 = {100, 200, 300};
		array3 = new int[] {100,200,300};
		
		/*
		 	4. 배열 생성시에 값이 정해져 있지 않을 경우
		 	저장할 공간만 생겅 가능하며
		 	생성된 각 항목의 공간에는 기본값으로 초기화가 이루어진다.
		 	정수 - 실수 :0, 0.0 | boolean : false, 참조타입 - null
		 */
		int a = 10;
		int b = 20;
		
		int[] array4 = new int[5];
		// [0] [0] [0] [0] [0]
		//	0	1	2	3	4
		System.out.println(array4);
		System.out.println(array4[2]);
		
	}

}
